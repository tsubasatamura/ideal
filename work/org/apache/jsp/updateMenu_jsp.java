/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.20
 * Generated at: 2021-06-16 18:05:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import controller.*;
import model.*;

public final class updateMenu_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

 static String fmtNull(String s){
    	if(s==null||s.equals("")){
    		s="&nbsp";
    	}
    	return s;
    }
    
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/incFile.jsp", Long.valueOf(1623852551345L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("controller");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("model");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n");
      out.write("\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
      out.write("<head>\r\n");
      out.write("<!-- メタ -->\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, user-scalable=yes, maximum-scale=1.0, minimum-scale=1.0\">\r\n");
      out.write("<meta name=\"description\" content=\"■Restaurante IDEALLE■\">\r\n");
      out.write("<meta name=\"keywords\" content=\"\">\r\n");
      out.write("<!-- メタ終わり -->\r\n");
      out.write("\r\n");
      out.write("<title>Menu Update</title>\r\n");
      out.write("\r\n");
      out.write("<!-- / CSSリンク（アドミン側） -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/style.css\" type=\"text/css\" media=\"screen\">\r\n");
      out.write("<!-- / CSSリンク（アドミン側） -->\r\n");
      out.write("\r\n");
      out.write("<!-- スクリプト・JS -->\r\n");
      out.write("<!--[if lt IE 9]>\r\n");
      out.write("<script src=\"js/html5.js\"></script>\r\n");
      out.write("<script src=\"js/css3-mediaqueries.js\"></script>\r\n");
      out.write("<![endif]-->\r\n");
      out.write("<script src=\"js/jquery1.4.4.min.js\"></script>\r\n");
      out.write("<script src=\"js/script.js\"></script>\r\n");
      out.write("<!-- スクリプト・JS終わり -->\r\n");
      out.write("\r\n");
      out.write("<!-- スタイル -->\r\n");
      out.write("<style>\r\n");
      out.write("<!--\r\n");
      out.write("div#type1{width:100%;display:inline-block;margin:10px auto;max-width: 650px;}\r\n");
      out.write("\r\n");
      out.write("div#type1 li a {\r\n");
      out.write("\t\t\t\tpadding:10px 4px 10px 4px;\r\n");
      out.write("\t\t\t\ttext-decoration: none;\r\n");
      out.write("\t\t\t\tcolor:#FFFFFF;\r\n");
      out.write("\t\t\t\tbackground-color: #660000;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("article.grid{width:31%}\r\n");
      out.write("\r\n");
      out.write("a{color: black;}\r\n");
      out.write("\r\n");
      out.write("div.gridWrapper2{\r\n");
      out.write("width:100%;\r\n");
      out.write("    margin-left: 33.5%;\r\n");
      out.write("\tmargin-right: auto;}\r\n");
      out.write("-->\r\n");
      out.write("</style>\r\n");
      out.write("<!-- スタイル終わり -->\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("<!--\r\n");
      out.write("function dataCheck(obj){\r\n");
      out.write("\tvar msg=\"\";\r\n");
      out.write("\tif(obj.menuName.value.length<1){\r\n");
      out.write("\t\tmsg+=\"メニュー名を入力してください。\\n\";\r\n");
      out.write("\t}\r\n");
      out.write("\tif(!obj.price.value.match(/^[0-9]+$/g)){\r\n");
      out.write("\t\tmsg+=\"価格を数値で入力してください。\\n\";\r\n");
      out.write("\t}\r\n");
      out.write("\tvar i;\r\n");
      out.write("\tfor(i =0;i<obj.orderFlg.length;i++){\r\n");
      out.write("\t\tif(obj.orderFlg[i].checked)break;\r\n");
      out.write("\t}\r\n");
      out.write("\tif(i>=obj.orderFlg.length){\r\n");
      out.write("\t\tmsg+=\"オーダーの可否をチェックしてください。\\n\";\r\n");
      out.write("\t}\r\n");
      out.write("\tif(msg.length>0){\r\n");
      out.write("\t\talert(msg);\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\treturn true;\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("//-->\r\n");
      out.write("</script>\r\n");
      out.write("<noscript>\r\n");
      out.write("\t<meta http-equiv=\"refresh\" content=\"0;URL=noscript.jsp\"/>\r\n");
      out.write("</noscript>\r\n");
      out.write("</head>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("<!--\r\n");
      out.write("function dataCheck(obj){\r\n");
      out.write("\tvar msg=\"\";\r\n");
      out.write("\tif(obj.menuName.value.length<1){\r\n");
      out.write("\t\tmsg+=\"メニュー名を入力してください。\\n\";\r\n");
      out.write("\t}\r\n");
      out.write("\tif(!obj.price.value.match(/^[0-9]+$/g)){\r\n");
      out.write("\t\tmsg+=\"価格を数値で入力してください。\\n\";\r\n");
      out.write("\t}\r\n");
      out.write("\tvar i;\r\n");
      out.write("\tfor(i =0;i<obj.orderFlg.length;i++){\r\n");
      out.write("\t\tif(obj.orderFlg[i].checked)break;\r\n");
      out.write("\t}\r\n");
      out.write("\tif(i>=obj.orderFlg.length){\r\n");
      out.write("\t\tmsg+=\"オーダーの可否をチェックしてください。\\n\";\r\n");
      out.write("\t}\r\n");
      out.write("\tif(msg.length>0){\r\n");
      out.write("\t\talert(msg);\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\treturn true;\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("//-->\r\n");
      out.write("</script>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- / メニューバー始まり（ホームと同じ） -->\r\n");
      out.write("<div id=\"header\">\r\n");
      out.write("\t<div class=\"inner\">\r\n");
      out.write("\t\t<!-- ロゴ -->\r\n");
      out.write("\t\t<div class=\"logo\">\r\n");
      out.write("\t\t\t<a href=\"home.jsp\">■Restaurante IDEALLE■<br><span>Italian Restaurante</span></a>\r\n");
      out.write("      <h1>welcome to Ideal</h1>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!-- / ロゴ -->\r\n");
      out.write("\r\n");
      out.write("\t  <!-- メインナビゲーション -->\r\n");
      out.write("    <nav id=\"mainNav\">\r\n");
      out.write("  \t\t<a class=\"menu\" id=\"menu\"><span>Top Menu</span></a>\r\n");
      out.write("\t\t\t<div class=\"panel\">\r\n");
      out.write("\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"home.jsp\">トップページ<br><span>Top</span></a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"ShowMenuSvl\">メニュー紹介<br><span>Menu</span></a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"ReservationStatusSvl\">予約状況<br><span>Reserve</span></a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"newsDisplay.jsp\">お知らせ<br><span>News</span></a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"UserSvl\">ログイン<br><span>Login</span></a></li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("      </div>\r\n");
      out.write("    </nav>\r\n");
      out.write("\t\t<!-- メインナビゲーション -->\r\n");
      out.write("\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("<!-- / メニューバー終わり（ホームと同じ） -->\r\n");
      out.write("\r\n");
      out.write("<!-- / アドミンメニューバー始まり-->\r\n");
      out.write("<div align=\"center\">\r\n");
      out.write("<div id=\"type1\">\r\n");
      out.write("<nav id=\"mainNav\">\r\n");
      out.write(" <a class=\"menu\" id=\"menu\"><span>Admin Menu</span></a>\r\n");
      out.write("<div class=\"panel\">\r\n");
      out.write("<ul>\r\n");
      out.write("<li><a href=\"AdminSvl\"><strong>トップ</strong><br><span>Top</span></a></li>\r\n");
      out.write("<li><a href=\"MenuMaintenanceSvl\"><strong>メニューメンテ</strong><br><span>Menu</span></a></li>\r\n");
      out.write("<li><a href=\"NewsSvl\"><strong>お知らせ更新</strong><br><span>News</span></a></li>\r\n");
      out.write("<li><a href=\"AdminReserveListSvl\">予約管理</strong><br><span>Reserve</span></a></li>\r\n");
      out.write("<li><a href=\"HolidaySvl\">定休日変更</strong><br><span>Holiday</span></a></li>\r\n");
      out.write("<li><a href=\"AdminContactSvl\">お問い合わせ一覧</strong><br><span>Contact</span></a></li>\r\n");
      out.write("<li><a href=\"UserListSvl\">ユーザー一覧</strong><br><span>UserList</span></a></li>\r\n");
      out.write("<li><a href=\"AdminLogoffSvl\">ログアウト</strong><br><span>Logout</span></a></li>\r\n");
      out.write("</ul>\r\n");
      out.write("</div>\r\n");
      out.write("</nav>\r\n");
      out.write("</div>\r\n");
      out.write("<!-- / アドミンメニューバー終わり-->\r\n");
      out.write("\r\n");

 request.setCharacterEncoding("UTF-8");

 int typeID;
 try{
	typeID=Integer.parseInt(request.getParameter("typeID"));
	}catch(NumberFormatException e){
		typeID=200;
	}

      out.write("\r\n");
      out.write("\r\n");
      model.Menu oneMenu = null;
      oneMenu = (model.Menu) _jspx_page_context.getAttribute("oneMenu", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (oneMenu == null){
        oneMenu = new model.Menu();
        _jspx_page_context.setAttribute("oneMenu", oneMenu, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      java.util.ArrayList mType = null;
      mType = (java.util.ArrayList) _jspx_page_context.getAttribute("mType", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (mType == null){
        mType = new java.util.ArrayList();
        _jspx_page_context.setAttribute("mType", mType, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div id=\"wrapper\">\r\n");
      out.write("\t\t<article class=\"post\">\r\n");
      out.write("\t\t\t<section class=\"content\">\r\n");
      out.write("<table border>\r\n");
      out.write(" <h3>メニューの更新</h3>\r\n");
      out.write(" <form action=\"MenuOperationSvl\" method=\"post\" onsubmit=\"return dataCheck(this);\" enctype=\"multipart/form-data\">\r\n");
      out.write(" <tr>\r\n");
      out.write(" <th>メニュー名</th>\r\n");
      out.write(" <td>\r\n");
      out.write(" <input type=\"text\" name=\"menuName\" size=\"30\" value='");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((model.Menu)_jspx_page_context.findAttribute("oneMenu")).getMenuName())));
      out.write("' />\r\n");
      out.write(" </td>\r\n");
      out.write(" </tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<th>価格</th>\r\n");
      out.write("<td>\r\n");
      out.write("<input type=\"text\" name=\"price\" size=\"10\"\r\n");
      out.write("value='");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((model.Menu)_jspx_page_context.findAttribute("oneMenu")).getPrice())));
      out.write("'/>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<th>オーダー可</th>\r\n");
      out.write("<td>\r\n");
 if(oneMenu.getOrderFlg()==1){
      out.write("\r\n");
      out.write("<input type=\"radio\" name=\"orderFlg\" value=\"1\" checked/>可\r\n");
      out.write("<input type=\"radio\" name=\"orderFlg\" value=\"0\"/>不可\r\n");
 }else{
      out.write("\r\n");
      out.write("<input type=\"radio\" name=\"orderFlg\" value=\"1\"/>可\r\n");
      out.write("<input type=\"radio\" name=\"orderFlg\" value=\"0\" checked/>不可\r\n");
 }
      out.write("\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<th>分類</th>\r\n");
      out.write("<td>\r\n");
      out.write("<select name=\"typeID\">\r\n");

for(Object o:mType){
	MenuType mt=(MenuType)o;

	String selected="";
	if(typeID==mt.getTypeID()){
		selected="selected";
	}else{
		selected="";
	}

      out.write('\r');
      out.write('\n');
if(((MenuType)o).getTypeID()!=100){ 
      out.write("\r\n");
      out.write("\t<option value=\"");
      out.print( mt.getTypeID());
      out.write('"');
      out.write(' ');
      out.print( selected );
      out.write(">\r\n");
      out.write("\t");
      out.print( ((MenuType)o).getTypeName() );
      out.write("</option>\r\n");
 } 
      out.write('\r');
      out.write('\n');
 } 
      out.write("\r\n");
      out.write("</select>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<th>画像</th>\r\n");
if(oneMenu.getMenuPhotoName()==null){ 
      out.write("\r\n");
      out.write("<td><input type=\"file\" name=\"menuPhotoName\" accept=\"image/*\" /></td>\r\n");
}else{ 
      out.write("\r\n");
      out.write("<td><input type=\"file\" name=\"menuPhotoName\" accept=\"image/*\" /><img width=\"150\" src=\"upload/");
      out.print( oneMenu.getMenuPhotoName() );
      out.write("\" /></td>\r\n");
} 
      out.write("\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<th>コメント</th>\r\n");
      out.write("<td>\r\n");
      out.write("<textarea name=\"detail\" cols=\"30\" rows=\"4\">");
      out.print( fmtNull(oneMenu.getDetail()) );
      out.write("</textarea>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<input type=\"hidden\" name=\"mode\" value=\"");
      out.print( MenuOperationSvl.UPDATE );
      out.write("\" />\r\n");
      out.write("<input type=\"hidden\" name=\"menuID\" value='");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((model.Menu)_jspx_page_context.findAttribute("oneMenu")).getMenuId())));
      out.write("' />\r\n");
      out.write("<input type=\"hidden\" name=\"typeID\" value='");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((model.Menu)_jspx_page_context.findAttribute("oneMenu")).getTypeId())));
      out.write("' />\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("<th colspan=\"2\" id=\"bottom\"><input type=\"submit\" value=\"メニューを更新\"/></th>\r\n");
      out.write("</tr>\r\n");
      out.write("</form>\r\n");
      out.write("</table>\r\n");
      out.write("<p><a href=\"MenuMaintenanceSvl?typeID=");
      out.print( typeID );
      out.write("\">一覧表示へ戻る</a></p>\r\n");
      out.write("</section>\r\n");
      out.write("</article>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
