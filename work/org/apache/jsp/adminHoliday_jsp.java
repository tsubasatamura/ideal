/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.20
 * Generated at: 2021-06-16 18:07:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import model.*;
import java.util.*;
import java.text.*;

public final class adminHoliday_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("model");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, user-scalable=yes, maximum-scale=1.0, minimum-scale=1.0\"/>\r\n");
      out.write("<meta name=\"description\" content=\"■Restaurante IDEALLE■\"/>\r\n");
      out.write("<meta name=\"keywords\" content=\"\"/>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"css/style.css\"/>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"css/tamura.css\"/>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"css/tamuraholiday.css\"/>\r\n");
      out.write("<title>定休日変更</title>\r\n");
      out.write("<!-- スクリプト・JS -->\r\n");
      out.write("<!--[if lt IE 9]>\r\n");
      out.write("<script src=\"js/html5.js\"></script>\r\n");
      out.write("<script src=\"js/css3-mediaqueries.js\"></script>\r\n");
      out.write("<![endif]-->\r\n");
      out.write("<script src=\"js/jquery1.4.4.min.js\"></script>\r\n");
      out.write("<script src=\"js/script.js\"></script>\r\n");
      out.write("<!-- スクリプト・JS終わり -->\r\n");
      out.write("\r\n");
      out.write("<!-- スタイル -->\r\n");
      out.write("<style>\r\n");
      out.write("<!--\r\n");
      out.write("div#type1{width:100%;display:inline-block;margin:10px auto;max-width: 650px;}\r\n");
      out.write("\r\n");
      out.write("div#type1 li a {\r\n");
      out.write("\t\t\t\tpadding:10px 4px 10px 4px;\r\n");
      out.write("\t\t\t\ttext-decoration: none;\r\n");
      out.write("\t\t\t\tcolor:#FFFFFF;\r\n");
      out.write("\t\t\t\tbackground-color: #660000;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("article.grid{width:31%}\r\n");
      out.write("\r\n");
      out.write("a{color: black;}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("div.gridWrapper2{\r\n");
      out.write("width:100%;\r\n");
      out.write("    margin-left: 33.5%;\r\n");
      out.write("\tmargin-right: auto;}\r\n");
      out.write("-->\r\n");
      out.write("</style>\r\n");
      out.write("<!-- スタイル終わり -->\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("<!--\r\n");
      out.write("function check(h) {\r\n");
      out.write("\t   var ElementsCount = document.hfrm.holiday.length+7; // チェックボックスの数\r\n");
      out.write("\t   var cnt=h-1;\r\n");
      out.write("\t   if(document.hfrm.day[cnt].checked){\r\n");
      out.write("\t     for( i=0 ; i<ElementsCount+38 ; i++ ) {\r\n");
      out.write("\t\t     if(document.hfrm.elements[i].className==h){\r\n");
      out.write("\t\t\t     document.hfrm.elements[i].checked = true; // ON・OFFを切り替え\r\n");
      out.write("\t\t     }\r\n");
      out.write("\t     }\r\n");
      out.write("\t   }else{\r\n");
      out.write("\t\t   for( i=0 ; i<ElementsCount+38 ; i++ ) {\r\n");
      out.write("\t\t\t     if(document.hfrm.elements[i].className==h){\r\n");
      out.write("\t\t\t\t     document.hfrm.elements[i].checked = false; // ON・OFFを切り替え\r\n");
      out.write("\t\t\t     }\r\n");
      out.write("\t       }\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("//-->\r\n");
      out.write("</script>\r\n");
      out.write("<noscript>\r\n");
      out.write("\t<meta http-equiv=\"refresh\" content=\"0;URL=noscript.jsp\"/>\r\n");
      out.write("</noscript>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      model.IdealException msg = null;
      msg = (model.IdealException) _jspx_page_context.getAttribute("msg", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (msg == null){
        msg = new model.IdealException();
        _jspx_page_context.setAttribute("msg", msg, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write("\r\n");
      out.write("<!-- / メニューバー始まり（ホームと同じ） -->\r\n");
      out.write("<div id=\"header\">\r\n");
      out.write("\t<div class=\"inner\">\r\n");
      out.write("\t\t<!-- ロゴ -->\r\n");
      out.write("\t\t<div class=\"logo\">\r\n");
      out.write("\t\t\t<a href=\"home.jsp\">■Restaurante IDEALLE■<br><span>Italian Restaurante</span></a>\r\n");
      out.write("      <h1>welcome to Ideal</h1>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!-- / ロゴ -->\r\n");
      out.write("\r\n");
      out.write("\t  <!-- メインナビゲーション -->\r\n");
      out.write("    <nav id=\"mainNav\">\r\n");
      out.write("  \t\t<a class=\"menu\" id=\"menu\"><span>Top Menu</span></a>\r\n");
      out.write("\t\t\t<div class=\"panel\">\r\n");
      out.write("\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"home.jsp\">トップページ<br><span>Top</span></a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"ShowMenuSvl\">メニュー紹介<br><span>Menu</span></a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"ReservationStatusSvl\">予約状況<br><span>Reserve</span></a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"newsDisplay.jsp\">お知らせ<br><span>News</span></a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"UserSvl\">ログイン<br><span>Login</span></a></li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("      </div>\r\n");
      out.write("    </nav>\r\n");
      out.write("\t\t<!-- メインナビゲーション -->\r\n");
      out.write("\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("<!-- / メニューバー終わり（ホームと同じ） -->\r\n");
      out.write("\r\n");
      out.write("<!-- / アドミンメニューバー始まり-->\r\n");
      out.write("<div align=\"center\">\r\n");
      out.write("<div id=\"type1\">\r\n");
      out.write("<nav id=\"mainNav\">\r\n");
      out.write(" <a class=\"menu\" id=\"menu\"><span>Admin Menu</span></a>\r\n");
      out.write("<div class=\"panel\">\r\n");
      out.write("<ul>\r\n");
      out.write("<li><a href=\"AdminSvl\"><strong>トップ</strong><br><span>Top</span></a></li>\r\n");
      out.write("<li><a href=\"MenuMaintenanceSvl\"><strong>メニューメンテ</strong><br><span>Menu</span></a></li>\r\n");
      out.write("<li><a href=\"NewsSvl\"><strong>お知らせ更新</strong><br><span>News</span></a></li>\r\n");
      out.write("<li><a href=\"AdminReserveListSvl\">予約管理</strong><br><span>Reserve</span></a></li>\r\n");
      out.write("<li><a href=\"HolidaySvl\">定休日変更</strong><br><span>Holiday</span></a></li>\r\n");
      out.write("<li><a href=\"AdminContactSvl\">お問い合わせ一覧</strong><br><span>Contact</span></a></li>\r\n");
      out.write("<li><a href=\"UserListSvl\">ユーザー一覧</strong><br><span>UserList</span></a></li>\r\n");
      out.write("<li><a href=\"AdminLogoffSvl\">ログアウト</strong><br><span>Logout</span></a></li>\r\n");
      out.write("</ul>\r\n");
      out.write("</div>\r\n");
      out.write("</nav>\r\n");
      out.write("</div>\r\n");
      out.write("<!-- / アドミンメニューバー終わり-->\r\n");
      out.write("<div id=\"wrapper\">\r\n");
      out.write("<section class=\"content\">\r\n");
      out.write("<article class=\"post\">\r\n");
      out.write("<h1>定休日更新</h1>\r\n");

	HCalendar mc=(HCalendar)request.getAttribute("mc");
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    Calendar cal = Calendar.getInstance();

      out.write('\r');
      out.write('\n');
 if(msg.getErrmsg()!=null){
      out.write("\r\n");
      out.write("\t<p>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((model.IdealException)_jspx_page_context.findAttribute("msg")).getErrmsg())));
      out.write("</p>\r\n");
 } 
      out.write("\r\n");
      out.write("<h2 id=\"month\">");
      out.print(mc.getYear() );
      out.write('年');
      out.print(mc.getMonth() );
      out.write("月</h2>\r\n");
      out.write("\t<span class=\"before\"><a href=\"?year=");
      out.print(mc.getYear());
      out.write("&month=");
      out.print(mc.getMonth()-1);
      out.write("\">&lt;&lt;前月</a></span>\r\n");
      out.write("\t<span class=\"after\"><a href=\"?year=");
      out.print(mc.getYear());
      out.write("&month=");
      out.print(mc.getMonth()+1);
      out.write("\">翌月&gt;&gt;</a></span>\r\n");
      out.write("<form id=\"hfrm\" name=\"hfrm\" action=\"HolidayInsertSvl\" method=\"post\" onsubmit=\"return chekced();\">\r\n");
      out.write("<table id=\"holidaytable\">\r\n");
      out.write("      <tr>\r\n");
      out.write("        <th><label>日<br/><input type=\"checkbox\" name=\"day\" onclick=\"check(1);\"/></label></th>\r\n");
      out.write("        <th><label>月<br/><input type=\"checkbox\" name=\"day\" onclick=\"check(2);\"/></label></th>\r\n");
      out.write("        <th><label>火<br/><input type=\"checkbox\" name=\"day\" onclick=\"check(3);\"/></label></th>\r\n");
      out.write("        <th><label>水<br/><input type=\"checkbox\" name=\"day\" onclick=\"check(4);\"/></label></th>\r\n");
      out.write("        <th><label>木<br/><input type=\"checkbox\" name=\"day\" onclick=\"check(5);\"/></label></th>\r\n");
      out.write("        <th><label>金<br/><input type=\"checkbox\" name=\"day\" onclick=\"check(6);\"/></label></th>\r\n");
      out.write("        <th><label>土<br/><input type=\"checkbox\" name=\"day\" onclick=\"check(7);\"/></label></th>\r\n");
      out.write("      </tr>\r\n");
      out.write("      ");
for(String[] row: mc.getData()){ 
      out.write("\r\n");
      out.write("      <tr>\r\n");
      out.write("      \t");
for(String col:row) {
      out.write("\r\n");
      out.write("      \t\t");
if (col.startsWith("*")){ 
      out.write("\r\n");
      out.write("      \t\t");
int cnt=0; 
      out.write("\r\n");
      out.write("      \t\t\t");

      			int year  = mc.getYear();   // 年
      			int month = mc.getMonth()-1; // 月
      			int day  = Integer.parseInt(col.substring(1));     // 日;
      			cal.set(year, month, day);
      			Date date = cal.getTime();
      			String strDate=sdf.format(date);
      out.write("\r\n");
      out.write("      \t\t\t");
if(Holiday.checkReserve(strDate)){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t<td class=\"hol\"><div class=\"con\"><label>");
      out.print(col.substring(1));
      out.write("<br/><input class=\"");
      out.print(cal.get(Calendar.DAY_OF_WEEK) );
      out.write("\" name=\"holiday\" type=\"checkbox\" value=\"");
      out.print(strDate );
      out.write("\" disabled/></label></div></td>\r\n");
      out.write("      \t\t\t");
}else{ 
      out.write("\r\n");
      out.write("      \t\t\t");
if (Holiday.checkHoliday(strDate)){
      out.write("\r\n");
      out.write("      \t\t\t\t<td><label>");
      out.print(col.substring(1));
      out.write("<br/><input class=\"");
      out.print(cal.get(Calendar.DAY_OF_WEEK) );
      out.write("\" name=\"holiday\" type=\"checkbox\" value=\"");
      out.print(strDate );
      out.write("\" checked/></label></td>\r\n");
      out.write("      \t\t\t\t<input type=\"hidden\" name=\"delete\" value=\"");
      out.print(strDate );
      out.write("\"/>\r\n");
      out.write("      \t\t\t");
}else{ 
      out.write("\r\n");
      out.write("      \t\t\t\t<td><label> ");
      out.print(col.substring(1));
      out.write("<br/><input class=\"");
      out.print(cal.get(Calendar.DAY_OF_WEEK) );
      out.write("\" name=\"holiday\" type=\"checkbox\" value=\"");
      out.print(strDate );
      out.write("\" /></label></td>\r\n");
      out.write("\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t");
} 
      out.write("\r\n");
      out.write("      \t\t");
}else if(col!=""){ 
      out.write("\r\n");
      out.write("      \t\t\t");
int cnt=0;
      			int year  = mc.getYear();   // 年
      			int month = mc.getMonth()-1; // 月
      			int day  = Integer.parseInt(col);     // 日;
      			cal.set(year, month, day);
      			Date date = cal.getTime();
      			String strDate=sdf.format(date);
      out.write("\r\n");
      out.write("      \t\t\t");
if(Holiday.checkReserve(strDate)){ 
      out.write("\r\n");
      out.write("      \t\t\t<td class=\"hol\"><div class=\"con\"><label>");
      out.print(col );
      out.write("<br/><input class=\"");
      out.print(cal.get(Calendar.DAY_OF_WEEK) );
      out.write("\" name=\"holiday\" type=\"checkbox\" value=\"");
      out.print(strDate );
      out.write("\" disabled/></label></div></td>\r\n");
      out.write("      \t\t\t");
}else{ 
      out.write("\r\n");
      out.write("      \t\t\t");
if (Holiday.checkHoliday(strDate)){
      out.write("\r\n");
      out.write("      \t\t\t<td><label>");
      out.print(col );
      out.write("<br/><input class=\"");
      out.print(cal.get(Calendar.DAY_OF_WEEK) );
      out.write("\" name=\"holiday\" type=\"checkbox\" value=\"");
      out.print(strDate );
      out.write("\" checked/></label></td>\r\n");
      out.write("      \t\t\t<input type=\"hidden\" name=\"delete\" value=\"");
      out.print(strDate );
      out.write("\"/>\r\n");
      out.write("      \t\t\t");
}else{ 
      out.write("\r\n");
      out.write("      \t\t\t<td><label>");
      out.print(col );
      out.write("<br/><input class=\"");
      out.print(cal.get(Calendar.DAY_OF_WEEK) );
      out.write("\" name=\"holiday\" type=\"checkbox\" value=\"");
      out.print(strDate );
      out.write("\" /></label></td>\r\n");
      out.write("      \t\t\t");
} 
      out.write("\r\n");
      out.write("      \t\t\t");
} 
      out.write("\r\n");
      out.write("      \t\t");
}else{ 
      out.write("\r\n");
      out.write("      \t\t\t<td>");
      out.print(col );
      out.write("</td>\r\n");
      out.write("      \t    ");
} 
      out.write("\r\n");
      out.write("        ");
} 
      out.write("\r\n");
      out.write("      </tr>\r\n");
      out.write("      ");
} 
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("<div align=\"center\"><input id=\"submit\" type=\"submit\" value=\"設定\"/></div>\r\n");
      out.write("<p class=\"alert\">※青枠はすでに予約が入っている日にちです。</p>\r\n");
      out.write("</form>\r\n");
      out.write("<div>&emsp;</div>\r\n");
      out.write("<p class=\"return\"><a href=\"adminIndex.jsp\">戻る</a></p>\r\n");
      out.write("</article>\r\n");
      out.write("</section>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
